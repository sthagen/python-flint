name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-20.04, windows-2019, macOS-10.15]
        os: [ubuntu-20.04, macOS-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: cp39-* cp310-* cp311-*
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_ALL_LINUX: bin/cibw_before_build_linux.sh
          CIBW_BEFORE_ALL_MACOS: bin/cibw_before_build_macosx.sh
          CIBW_BEFORE_BUILD: pip install numpy cython
          CIBW_ENVIRONMENT: >
            C_INCLUDE_PATH=$(pwd)/.local/include/
            LIBRARY_PATH=$(pwd)/.local/lib/
            LD_LIBRARY_PATH=$(pwd)/.local/lib:$LD_LIBRARY_PATH
          CIBW_TEST_COMMAND: python -c 'import flint; print(str(flint.fmpz(2)))'

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  test_wheels:
    needs: build_wheels
    name: Test ${{ matrix.python-version }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-10.15]
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: wheelhouse
      - run: python -m venv venv
      - run: venv/bin/pip install -U pip
      - run: venv/bin/pip install --find-links wheelhouse python_flint
      - run: venv/bin/python test/test.py
